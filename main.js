!function(){"use strict";class e{constructor(e,t,n,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._popupWithImage=n,this._handleCardClick=s}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".content__card-like-button"),this._deleteButton=this._cardElement.querySelector(".content__card-delete-button"),this._imageContainer=this._cardElement.querySelector(".content__card-image"),this._cardImage.addEventListener("click",(()=>{this._handleImageClick()})),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteIcon()}))}_handleDeleteIcon(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._likeButton.classList.toggle("content__card-like-button_clicked")}_handleImageClick(){this._handleCardClick(this._name,this._link)}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".content__card").cloneNode(!0),this._cardTitle=this._cardElement.querySelector(".content__card-text"),this._cardImage=this._cardElement.querySelector(".content__card-image"),this._renderCard(),this._setEventListeners(),this._cardElement}_renderCard(){this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name}}class t{constructor(e,t){this._formElement=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButton=this._formElement.querySelector(e.submitButtonSelector),this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)]}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=""}_checkFormValidity(){return this._inputElements.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const n=document.querySelector(".profile__edit-button"),s=document.querySelector(".profile__add-button"),o=document.querySelector('input[name="name"]'),i=document.querySelector('input[name="description"]');document.querySelector(".profile__info-name"),document.querySelector(".profile__info-description"),document.querySelector('input[name="title"]'),document.querySelector('input[name="link"]');class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this.closeModalByEscape),document.addEventListener("click",this.closeModalOnRemoteClick)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this.closeModalByEscape),document.removeEventListener("click",this.closeModalOnRemoteClick)}closeModalByEscape=e=>{"Escape"===e.key&&this.close()};closeModalOnRemoteClick=e=>{e.target.classList.contains("modal_opened")&&this.close()};setEventListeners(){this._closeButton=this._popupElement.querySelector(".modal__exit-button"),this._closeButton.addEventListener("click",(()=>this.close()))}}class a extends r{constructor(e,t){super({popupSelector:e}),this._handleSubmit=t,this._form=this._popupElement.querySelector("form")}reset(){this._form&&this._form.reset()}close=()=>{super.close(),this.reset()};_getInputValues(){const e=[...this._popupElement.querySelectorAll("input")],t={};for(const n of e)t[n.name]=n.value;return t}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())}))}}const l={},c=t=>{const n=new e(t,"#card-template",u,((e,t)=>u.open(e,t)));h.addItem(n.getView())},m=new class{constructor(e){let{nameSelector:t,jobSelector:n}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(n)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:n}=e;this._nameElement.textContent=t,this._jobElement.textContent=n}}({nameSelector:".profile__info-name",jobSelector:".profile__info-description"}),u=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._imagePreview=this._popupElement.querySelector(".modal__card-image"),this._imagePreviewTitle=this._popupElement.querySelector(".modal__image-title")}open(e,t){this._imagePreview.src=t,this._imagePreview.alt=e,this._imagePreviewTitle.textContent=e,super.open()}}({popupSelector:"#image-popup"}),d=new a("#edit_profile_modal",(e=>{let{name:t,description:n}=e;return function(e,t){m.setUserInfo({name:e,job:t}),d.close()}(t,n)})),_=new a("#add_image_modal",(e=>{let{title:t,link:n}=e;!function(e,t){c({name:e,link:t}),_.close()}(t,n)}));d.setEventListeners(),_.setEventListeners(),u.setEventListeners();const h=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach(this._renderer)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:c},".content");var p;p={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button-inactive",inputErrorClass:"modal__input_type_error"},[...document.querySelectorAll(p.formSelector)].forEach((e=>{const n=new t(p,e),s=e.getAttribute("name");l[s]=n,n.enableValidation()})),h.renderItems(),n.addEventListener("click",(()=>{l["profile-form"].resetValidation(),(()=>{const{name:e,job:t}=m.getUserInfo();o.value=e,i.value=t})(),d.open()})),s.addEventListener("click",(()=>{l["add-image-form"].resetValidation(),_.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,